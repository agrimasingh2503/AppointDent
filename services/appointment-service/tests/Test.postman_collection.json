{
	"info": {
		"_postman_id": "09eca3df-e529-47d6-845d-5ddcb01585eb",
		"name": "appointment-service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31133349",
		"_collection_link": "https://appointdent.postman.co/workspace/AppointDent~3d7b8d88-ecc1-4d83-a513-eb9122453c58/collection/31133349-09eca3df-e529-47d6-845d-5ddcb01585eb?action=share&source=collection_link&creator=31133349"
	},
	"item": [
		{
			"name": "GET /",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response text should match\", function () {",
							"    pm.expect(pm.response.text()).to.equal(\"AppointDent - Appointments Service\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/",
					"host": [
						"{{host}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /api/appointments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response is in JSON format\", function () {",
							"    pm.response.to.be.json;",
							"});",
							"",
							"// Parse the request and response JSON bodies",
							"",
							"var requestJson = JSON.parse(pm.request.body.raw);",
							"var responseJson = pm.response.json();",
							"",
							"// Get the number of keys in the request and response",
							"var requestKeys = Object.keys(requestJson).length;",
							"var responseKeys = Object.keys(responseJson).length;",
							"",
							"// Compare the number of keys",
							"// Must be lower by 1, because there's the auto-generated key in the response.",
							"pm.test(\"Number of keys in request is lower by 1 than the response\", function () {",
							"    pm.expect(requestKeys).to.equal(responseKeys - 1);",
							"});",
							"",
							"// Set the ID for other tests.",
							"const appointmentId = pm.response.json().id;",
							"pm.environment.set(\"appointmentId\", appointmentId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"start_timestamp\": 123131312,\n    \"end_timestamp\": 123131987,\n    \"dentistId\": \"sdkashd123918\",\n    \"patientId\": \"1321madsjiadha2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/appointments",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /api/appointments (invalid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Start_timest&m\": 123131312, // malformed\n    \"e(d_timest_p\": 123131987,   // malformed\n    \"dentistId\": \"sdkashd123918\",\n    \"patientId\": \"1321madsjiadha2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/appointments",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /api/appointments (invalid) 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"start_timestamp\": 123131312,\n    // \"end_timestamp\" is missing!\n    \"dentistId\": \"sdkashd123918\",\n    \"patientId\": \"1321madsjiadha2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/appointments",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /api/appointments (invalid) 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/appointments",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST /api/appointments (invalid) 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"start_timestam\": 123131312,\n    \"end_timestamp\": 123131987,\n    \"dentistId\": 11123131.32132131, // invalid type\n    \"patientId\": {}                 // invalid type\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/appointments",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH /api/appointments/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Get the response JSON",
							"var jsonResponse = pm.response.json();",
							"",
							"// Check if the response is an object",
							"pm.test(\"Response is an object\", function () {",
							"    pm.expect(jsonResponse).to.be.an('object');",
							"});",
							"",
							"// Check if the response has the required properties",
							"pm.test(\"Check start_timestamp property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('start_timestamp');",
							"    pm.expect(jsonResponse.start_timestamp).to.be.a('number');",
							"});",
							"",
							"pm.test(\"Check end_timestamp property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('end_timestamp');",
							"    pm.expect(jsonResponse.end_timestamp).to.be.a('number');",
							"});",
							"",
							"pm.test(\"Check dentistId property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('dentistId');",
							"    pm.expect(jsonResponse.dentistId).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Check patientId property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('patientId');",
							"    pm.expect(jsonResponse.patientId).to.be.a('string');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"start_timestamp\": 21321312321,\n    \"end_timestamp\": 213213129871\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/appointments/:id",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{appointmentId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH /api/appointments/:id 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Get the response JSON",
							"var jsonResponse = pm.response.json();",
							"",
							"// Check if the response is an object",
							"pm.test(\"Response is an object\", function () {",
							"    pm.expect(jsonResponse).to.be.an('object');",
							"});",
							"",
							"// Check if the response has the required properties",
							"pm.test(\"Check start_timestamp property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('start_timestamp');",
							"    pm.expect(jsonResponse.start_timestamp).to.be.a('number');",
							"});",
							"",
							"pm.test(\"Check end_timestamp property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('end_timestamp');",
							"    pm.expect(jsonResponse.end_timestamp).to.be.a('number');",
							"});",
							"",
							"pm.test(\"Check dentistId property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('dentistId');",
							"    pm.expect(jsonResponse.dentistId).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Check patientId property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('patientId');",
							"    pm.expect(jsonResponse.patientId).to.be.a('string');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"start_timestamp\": 21321312321\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/appointments/:id",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{appointmentId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH /api/appointments/:id 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Get the response JSON",
							"var jsonResponse = pm.response.json();",
							"",
							"// Check if the response is an object",
							"pm.test(\"Response is an object\", function () {",
							"    pm.expect(jsonResponse).to.be.an('object');",
							"});",
							"",
							"// Check if the response has the required properties",
							"pm.test(\"Check start_timestamp property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('start_timestamp');",
							"    pm.expect(jsonResponse.start_timestamp).to.be.a('number');",
							"});",
							"",
							"pm.test(\"Check end_timestamp property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('end_timestamp');",
							"    pm.expect(jsonResponse.end_timestamp).to.be.a('number');",
							"});",
							"",
							"pm.test(\"Check dentistId property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('dentistId');",
							"    pm.expect(jsonResponse.dentistId).to.be.a('string');",
							"});",
							"",
							"pm.test(\"Check patientId property\", function() {",
							"    pm.expect(jsonResponse).to.have.property('patientId');",
							"    pm.expect(jsonResponse.patientId).to.be.a('string');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"start_timestamp\": 21321312393217,\n    \"foobar\": \"baz\" // should be ignored\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/appointments/:id",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{appointmentId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH /api/appointments/:id (invalid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    // should be an error (bad usage)\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/appointments/:id",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{appointmentId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /api/appointments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Parse the response JSON",
							"var jsonData = pm.response.json();",
							"",
							"// Check if the response is an array",
							"pm.test(\"Response is an array\", function () {",
							"    pm.expect(jsonData).to.be.an('array');",
							"});",
							"",
							"// Check if each item in the array is an object",
							"pm.test(\"Items in the array are objects\", function () {",
							"    if (jsonData.length > 0) {",
							"        jsonData.forEach(function (item) {",
							"            pm.expect(item).to.be.an('object');",
							"        });",
							"    }",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/appointments",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /api/appointments/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Parse the response JSON",
							"var jsonData = pm.response.json();",
							"",
							"// Check if the response is an object",
							"pm.test(\"Response is an object\", function () {",
							"    pm.expect(jsonData).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/appointments/:id",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{appointmentId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET /api/appointments/:id (invalid)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/appointments/:id",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "foobarbaz"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET invalid route",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response text should match\", function () {",
							"    pm.expect(pm.response.text()).to.equal(\"Not found.\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/foobar",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"foobar"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE /api/appointments/:id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is in JSON format\", function () {",
							"    pm.response.to.be.json;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/appointments/:id",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "{{appointmentId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE *appointments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response code shall be 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/appointments/",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"appointments",
						""
					]
				}
			},
			"response": []
		}
	]
}
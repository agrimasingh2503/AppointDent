# Entry point for GitLab CI for the AppointDent Project

image: node:docker
services:
  - docker:dind

variables:
  SERVER_PATH: server
  CLIENT_PATH: client
  APPOINTMENT_SERVICE_PATH: services/appointment-service
  DENTIST_SERVICE_PATH: services/dentist-service
  NOTIFICATION_SERVICE_PATH: services/notification-service
  PATIENT_SERVICE_PATH: services/patient-service
  SESSION_SERVICE_PATH: services/session-service
  # add any additional paths

# We permit three stages: (i) lint, (ii) test (iii) build.
stages:
  - lint
  - test
  - build

before_script:
  - apk update && apk add --no-cache bash 

lint-server:
  stage: lint
  image: node:alpine
  tags:
    - docker
  before_script:
    - cd $SERVER_PATH
    - npm ci --cache .npm --prefer-offline
  script:
    - echo "Linting server..."
    - npm run lint
    - echo "Lint successful!"
  allow_failure: true
  
# TODO: add testing stage for server (via Postman)

test-server:
  stage: test
  image: node:alpine
  tags:
    - docker
  before_script:
    - cd $SERVER_PATH
    - npm ci --cache .npm --prefer-offline
  script:
    - echo "Running tests on the server..."
    - exit 0 # TODO: execute the tests

# TODO: finish the building stage

build-client:
  stage: build
  image: node:alpine
  tags:
    - docker
  needs: [] # the client has no tests (as of now)
  before_script:
    - cd $CLIENT_PATH
    - npm ci --cache .npm --prefer-offline
  script:
    - echo "Building the client..."
    - npm run build
    - echo "Build successful!"
  artifacts:
    paths:
      - $CLIENT_PATH/dist
  # Disabled for testing purposes.
  # only:
  #   - main # we don't want to excessively exhaust the servers

build-server:
  stage: build
  image: node:alpine
  tags:
    - docker
  needs: ["test-server"]
  before_script:
    - cd $SERVER_PATH
    - npm ci --cache .npm --prefer-offline
  script:
    - echo "Building the server..."
    - npm run build
    - echo "Build successful!"
  artifacts:
    paths:
      - $SERVER_PATH/dist
  # Disabled for testing purposes.
  # only:
  #   - main # we don't want to excessively exhaust the servers
 